var searchIndex = JSON.parse('{\
"inviting_rust":{"doc":"","i":[[0,"ch01","inviting_rust","第一章：Rust语言基础",null,null],[0,"lexical","inviting_rust::ch01","第一章：Rust语言基础 1.3 语法面面观（一） …",null,null],[0,"outer_module","inviting_rust::ch01::lexical","",null,null],[0,"inner_module","inviting_rust::ch01::lexical::outer_module","行级文档注释 ( 必须是 3 个斜杠)…",null,null],[0,"nested_comments","","mod 定义个模块 /* <em>/  /</em>* <em>/  /</em>! */  ",null,null],[0,"dummy_item","inviting_rust::ch01::lexical::outer_module::nested_comments","/* <em>/  /</em>* <em>/  /</em>! */  ",null,null],[0,"degenerate_cases","inviting_rust::ch01::lexical::outer_module","",null,null],[0,"dummy_item","inviting_rust::ch01::lexical::outer_module::degenerate_cases","空的行级文档注释",null,null],[5,"ident_show","inviting_rust::ch01::lexical","标识符:",null,[[]]],[5,"macro_show","","声明宏示例",null,[[]]],[5,"path_show","","Path 展示",null,[[]]],[0,"expr","inviting_rust::ch01","第一章：Rust语言基础 1.4 …",null,null],[5,"eop","inviting_rust::ch01::expr","面向表达式 (Expression-Oriented programming)",null,[[]]],[5,"semi_and_block_expr","","分号表达式 vs 块表达式…",null,[[]]],[5,"fizzbuzz_match","","FizzBuzz in match",null,[[]]],[5,"fizzbuzz_if","","FizzBuzz in if",null,[[]]],[0,"ctfe","inviting_rust::ch01","第一章：Rust语言基础 1.4 …",null,null],[5,"must_const_expr","inviting_rust::ch01::ctfe","必须是常量表达式才能在常量上下文使用",null,[[]]],[5,"const_array_len","","const fn",null,[[]]],[5,"const_fib","","const fn : fib",null,[[]]],[5,"const_fn_","","const fn",null,[[]]],[5,"const_fn_error","","展示错误的 const 求值用法",null,[[]]],[5,"fixed_const_fn_error","","修正错误的 const 求值用法",null,[[]]],[5,"others_const_fn","","其他的Const fn 用法",null,[[]]],[5,"mir_show","","编译期计算原理：MIR 展示",null,[[]]],[5,"if_while_true","","If True && While True",null,[[]]],[5,"const_generic_show","","const generic",null,[[]]],[5,"array_chunk_show","","array chunk 演示",null,[[]]],[5,"title","inviting_rust::ch01","ExamplesBasic usage:",null,[[]]],[0,"ch02","inviting_rust","第二章：Rust核心概念",null,null],[0,"s1_ownership","inviting_rust::ch02","第二章：Rust核心概念 2.1 …",null,null],[5,"primitive_types","inviting_rust::ch02::s1_ownership","Rust 语义：Move 语义 与 Copy 语义…",null,[[]]],[5,"custom_types","","Rust 语义：Move 语义 与 Copy 语义…",null,[[]]],[5,"understand_copy_clone","","Rust 语义：Move 语义 与 Copy 语义理解 …",null,[[]]],[5,"understand_copy","","Rust 语义：Move 语义 与 Copy 语义理解 …",null,[[]]],[5,"understand_move","","示例1: Box 实现 DereMove",null,[[]]],[5,"understand_clone","","语义层面来理解 Clone …",null,[[]]],[5,"understand_drop","","示例1: Move 的本质：drop 标记",null,[[]]],[0,"s2_lifetime","inviting_rust::ch02","第二章：Rust核心概念 2.2 …",null,null],[5,"understand_scope","inviting_rust::ch02::s2_lifetime","理解词法作用域基本数据类型： …",null,[[]]],[5,"understand_nll","","理解借用检查 NLL示例：替换字符串中的问号",null,[[]]],[5,"understand_lifetime","","理解普通生命周期参数：",null,[[]]],[5,"understand_lifetime_early_late_bound","","说明： 生命周期参数：late bound vs early bound ",null,[[]]],[5,"understand_lifetime_for_closure","","闭包 与 高阶生命周期",null,[[]]],[5,"understand_lifetime_in_generic_type","","理解 T vs &T",null,[[]]],[5,"understand_lifetime_hrtb","","示例： 理解 trait对象中的生命周期参数",null,[[]]],[0,"s3_thread_safe","inviting_rust::ch02","第二章：Rust核心概念 2.3 Thread Safe",null,null],[5,"understand_local_thread","inviting_rust::ch02::s3_thread_safe","理解本地线程，理解并发…",null,[[]]],[5,"understand_shared_thread","","线程间共享数据…",null,[[]]],[5,"understand_safed_shared_thread","","使用 Arc 和 Mutex 安全共享数据",null,[[]]],[5,"understand_channel_and_condvar","","构建「无悔」并发系统使用 channel 和 condvar …",null,[[]]],[0,"s4_lockfree","inviting_rust::ch02","第二章：Rust核心概念 2.3 Lockfree",null,null],[5,"memory_reordering","inviting_rust::ch02::s4_lockfree","并发编程注重的三点：…",null,[[]]],[0,"s5_trait_and_generic","inviting_rust::ch02","第二章：Rust核心概念 2.4 trait 和 泛型",null,null],[5,"trait_concept","inviting_rust::ch02::s5_trait_and_generic","概念介绍trait 四种作用接口 (interface)…",null,[[]]],[5,"trait_dyn_dispatch","","动态分发",null,[[]]],[5,"trait_object","","trait 对象本质示例 1:",null,[[]]],[5,"object_safety","","对象安全对象安全",null,[[]]],[5,"trait_object_to_enum","","当不能实现 trait 对象当时候该如何？…",null,[[]]],[5,"blanket_impls","","Overlapping blanket impls当前 Rust 不支持  <code>trait </code>为 …",null,[[]]],[5,"trait_self_sized_bound","","对象安全规则里，为什么需要 <code>Self: Sized</code>…",null,[[]]],[0,"s6_paradigms","inviting_rust::ch02","第二章：Rust核心概念 2.5 …",null,null],[5,"compiler_oriented_programming","inviting_rust::ch02::s6_paradigms","Rust 是面向对象语言吗？OOP style:",null,[[]]],[0,"s7_error_handle","inviting_rust::ch02","第二章：Rust核心概念 2.6 错误处理",null,null],[5,"elim_failure","inviting_rust::ch02::s7_error_handle","消除失败类型系统保证函数契约",null,[[]]],[5,"error_handle","","分层错误处理…",null,[[]]],[5,"panic_cant_handle","","panic 的两种类型：Unwinding（栈展开）。…",null,[[]]],[0,"s8_metaprogramming","inviting_rust::ch02","第二章：Rust核心概念 2.7 元编程",null,null],[5,"any_refection","inviting_rust::ch02::s8_metaprogramming","动态自省示例1:",null,[[]]],[5,"declarative_macros","","声明宏宏展开命令： cargo rustc -- -Z …",null,[[]]],[5,"derive_proc_macros","","介绍：serde.rs",null,[[]]],[5,"attributes_proc_macros","","属性宏案例：magnet/metered-rs",null,[[]]],[0,"s9_unsafe_rust","inviting_rust::ch02","第二章：Rust核心概念 2.8 Unsafe Rust",null,null],[5,"unsafe_intro","inviting_rust::ch02::s9_unsafe_rust","Unsafe Rust 介绍示例1: Unsafe Rust 是 Safe Rust …",null,[[]]],[5,"security_abstract","","安全抽象什么叫安全抽象？ 最简单的示例：",null,[[]]],[5,"nonnull","","其他介绍NonNullPlayLinkedListMaybeUninit…",null,[[]]],[0,"ch03","inviting_rust","第三章：Rust 异步编程概念",null,null],[0,"s1_io_model","inviting_rust::ch03","第三章：Rust 异步编程概念",null,null],[5,"basic_concept","inviting_rust::ch03::s1_io_model","异步 I/O 模型基本概念…",null,[[]]],[5,"epoll","","epoll",null,[[]]],[5,"io_uring","","io_uring 异步 I/O 模型Linux AIO …",null,[[]]],[5,"event_driven","","事件驱动编程模型因为处理 I/O …",null,[[]]],[5,"epoll_server","","Rust 实现 epoll server 示例讲解…",null,[[]]],[0,"s2_async_await","inviting_rust::ch03","第三章：Rust 异步编程概念",null,null],[5,"futures","inviting_rust::ch03::s2_async_await","Future 和 Futures-rsFuture and taskfutures-rs示例：",null,[[]]],[5,"generator","","生成器 与 协程历史…",null,[[]]],[0,"s3_async_runtime","inviting_rust::ch03","第三章：Rust 异步编程概念",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);